/*
 * 		SearchPersonPanel.java
 *   Copyright (C) 2016  Adrián E. Córdoba [software.asia@gmail.com]
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/**
 * 		SearchPersonPanel.java
 *  Adrián E. Córdoba [software.asia@gmail.com] 		Dec 9, 2016
 */
package ar.com.adriancordoba.derqui.app.gui.derquisystemsmanager.derquisystemsmanagerfrontend.windows.dialogs;

import ar.com.adriancordoba.app.console.commonservices.database.DatabaseConnectionsManager;
import ar.com.adriancordoba.derqui.app.console.derquisystemsmanager.derquisystemsmanagerdataaccess.model.person.IdentificationType;
import ar.com.adriancordoba.derqui.app.console.derquisystemsmanager.derquisystemsmanagerdataaccess.model.person.Person;
import ar.com.adriancordoba.derqui.app.console.derquisystemsmanager.derquisystemsmanagerdataaccess.model.person.managers.IdentificationsTypesManager;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 *
 * @author Adrián E. Córdoba [software.asia@gmail.com]
 */
public class SearchPersonPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchPersonPanel
     */
    public SearchPersonPanel() {
        identificationTypeComboBoxModel = new DefaultComboBoxModel<>();
        peopleListModel = new DefaultListModel<>();

        fillIdentificationTypeComboBoxModel();

        initComponents();
    }

    public Person getSelectedPerson() {
        Person person = null;
        if (peopleList.getSelectedIndex() != -1)
            person = peopleList.getSelectedValue();
        return person;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dataPanel = new javax.swing.JPanel();
        namesPanel = new javax.swing.JPanel();
        firstNameLabel = new javax.swing.JLabel();
        middleNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        middleNameTextField = new javax.swing.JTextField();
        firstNameTextField = new javax.swing.JTextField();
        lastNameTextField = new javax.swing.JTextField();
        identificationPanel = new javax.swing.JPanel();
        identificationTypeComboBox = new javax.swing.JComboBox<>();
        identificationNumberLabel = new javax.swing.JLabel();
        identificationNumberTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        peopleScrollPane = new javax.swing.JScrollPane();
        peopleList = new javax.swing.JList<>();

        dataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        firstNameLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("i18n/AssignmentInternalFrameBundle"); // NOI18N
        firstNameLabel.setText(bundle.getString("SearchPersonPanel.firstNameLabel.text")); // NOI18N

        middleNameLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        middleNameLabel.setText(bundle.getString("SearchPersonPanel.middleNameLabel.text")); // NOI18N

        lastNameLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lastNameLabel.setText(bundle.getString("SearchPersonPanel.lastNameLabel.text")); // NOI18N

        middleNameTextField.setText(bundle.getString("SearchPersonPanel.middleNameTextField.text")); // NOI18N

        firstNameTextField.setText(bundle.getString("SearchPersonPanel.firstNameTextField.text")); // NOI18N

        lastNameTextField.setText(bundle.getString("SearchPersonPanel.lastNameTextField.text")); // NOI18N

        javax.swing.GroupLayout namesPanelLayout = new javax.swing.GroupLayout(namesPanel);
        namesPanel.setLayout(namesPanelLayout);
        namesPanelLayout.setHorizontalGroup(
            namesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(namesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(namesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(middleNameLabel)
                    .addComponent(firstNameLabel)
                    .addComponent(lastNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(namesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(middleNameTextField)
                    .addComponent(firstNameTextField)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        namesPanelLayout.setVerticalGroup(
            namesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(namesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(namesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(namesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(middleNameLabel)
                    .addComponent(middleNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(namesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        identificationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, bundle.getString("SearchPersonPanel.IdentificationPanel.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12))); // NOI18N

        identificationTypeComboBox.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        identificationTypeComboBox.setModel(identificationTypeComboBoxModel);

        identificationNumberLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        identificationNumberLabel.setText(bundle.getString("SearchPersonPanel.identificationNumberLabel.text")); // NOI18N

        identificationNumberTextField.setText(bundle.getString("SearchPersonPanel.identificationNumberTextField.text")); // NOI18N

        javax.swing.GroupLayout identificationPanelLayout = new javax.swing.GroupLayout(identificationPanel);
        identificationPanel.setLayout(identificationPanelLayout);
        identificationPanelLayout.setHorizontalGroup(
            identificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(identificationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(identificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(identificationPanelLayout.createSequentialGroup()
                        .addComponent(identificationTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 42, Short.MAX_VALUE))
                    .addGroup(identificationPanelLayout.createSequentialGroup()
                        .addComponent(identificationNumberLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(identificationNumberTextField)))
                .addContainerGap())
        );
        identificationPanelLayout.setVerticalGroup(
            identificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(identificationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(identificationTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(identificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(identificationNumberLabel)
                    .addComponent(identificationNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        searchButton.setText(bundle.getString("SearchPersonPanel.searchButton.text")); // NOI18N
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dataPanelLayout = new javax.swing.GroupLayout(dataPanel);
        dataPanel.setLayout(dataPanelLayout);
        dataPanelLayout.setHorizontalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(searchButton)
                    .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(namesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(identificationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        dataPanelLayout.setVerticalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(namesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(identificationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton)
                .addContainerGap())
        );

        peopleList.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        peopleList.setModel(peopleListModel);
        peopleScrollPane.setViewportView(peopleList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(peopleScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(peopleScrollPane))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        List<Person> matchingPeopleList;
        DatabaseConnectionsManager databaseConnectionsManager = null;
        Connection connection = null;
        try {
            databaseConnectionsManager = DatabaseConnectionsManager.getInstance();
            connection = databaseConnectionsManager.takeConnection();
            matchingPeopleList = Person.getPeopleList(connection, firstNameTextField.getText(), middleNameTextField.getText(), lastNameTextField.getText(), ((IdentificationType) identificationTypeComboBox.getSelectedItem()).getId(), getIdentificationNumber());
            fillpeopleListModel(matchingPeopleList);
        } catch (Exception exception) {
            logger.error("Cannot fill vacant equipment list.", exception);
            JOptionPane.showMessageDialog(this, bundle.getString("SearchPersonPanel.searchPerson.problem"), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            databaseConnectionsManager.returnConnection(connection);
        }

    }//GEN-LAST:event_searchButtonActionPerformed
    private void fillIdentificationTypeComboBoxModel() {
        IdentificationType selectIdentificationType = new IdentificationType();
        selectIdentificationType.setId(0);
        selectIdentificationType.setName(bundle.getString("SearchPersonPanel.IdentificationTypeComboBox.Select"));
        identificationTypeComboBoxModel.addElement(selectIdentificationType);
        for (IdentificationType identificationType : IdentificationsTypesManager.getIdentificationsTypesList())
            identificationTypeComboBoxModel.addElement(identificationType);
    }

    private void fillpeopleListModel(List<Person> matchingPeopleList) {
        peopleListModel.removeAllElements();
        for (Person person : matchingPeopleList)
            peopleListModel.addElement(person);
    }

    private int getIdentificationNumber() throws Exception {
        int identificationNumber = 0;
        if (!identificationNumberTextField.getText().isEmpty())
            identificationNumber = Integer.parseInt(identificationNumberTextField.getText());
        return identificationNumber;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel dataPanel;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel identificationNumberLabel;
    private javax.swing.JTextField identificationNumberTextField;
    private javax.swing.JPanel identificationPanel;
    private javax.swing.JComboBox<IdentificationType> identificationTypeComboBox;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JLabel middleNameLabel;
    private javax.swing.JTextField middleNameTextField;
    private javax.swing.JPanel namesPanel;
    private javax.swing.JList<Person> peopleList;
    private javax.swing.JScrollPane peopleScrollPane;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables

    // Models.
    private DefaultComboBoxModel<IdentificationType> identificationTypeComboBoxModel;
    private DefaultListModel<Person> peopleListModel;

    private ResourceBundle bundle = ResourceBundle.getBundle("i18n/AssignmentInternalFrameBundle"); // NOI18N
    private static final Logger logger = LogManager.getLogger(SearchPersonPanel.class);
}
