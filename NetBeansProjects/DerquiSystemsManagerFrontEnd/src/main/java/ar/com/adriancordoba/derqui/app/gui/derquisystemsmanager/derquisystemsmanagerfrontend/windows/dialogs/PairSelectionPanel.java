/*
 * 		PairSelectionPanel.java
 *   Copyright (C) 2016  Adrián E. Córdoba [software.asia@gmail.com]
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/**
 * 		PairSelectionPanel.java
 *  Adrián E. Córdoba [software.asia@gmail.com] 		Sep 12, 2019
 */
package ar.com.adriancordoba.derqui.app.gui.derquisystemsmanager.derquisystemsmanagerfrontend.windows.dialogs;

import ar.com.adriancordoba.derqui.app.console.derquisystemsmanager.derquisystemsmanagerdataaccess.model.wiring.StreetCable;
import ar.com.adriancordoba.derqui.app.console.derquisystemsmanager.derquisystemsmanagerdataaccess.model.wiring.StreetFrame;
import ar.com.adriancordoba.derqui.app.console.derquisystemsmanager.derquisystemsmanagerdataaccess.model.wiring.StreetPair;
import ar.com.adriancordoba.derqui.app.gui.derquisystemsmanager.derquisystemsmanagerfrontend.utils.CablesAnalyzer;
import ar.com.adriancordoba.derqui.app.gui.derquisystemsmanager.derquisystemsmanagerfrontend.windows.models.CableComboBoxRenderer;
import ar.com.adriancordoba.derqui.app.gui.derquisystemsmanager.derquisystemsmanagerfrontend.windows.models.PairComboBoxRenderer;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Adrián E. Córdoba [software.asia@gmail.com]
 */
public class PairSelectionPanel extends javax.swing.JPanel {

    /**
     * Creates new form PairSelectionPanel
     */
    public PairSelectionPanel(int siteId, CablesAnalyzer cablesAnalizer) {
        this.cablesAnalyzer = cablesAnalizer;
        createComboBoxModels();
        createComboBoxRenderers();
        fillStreetFrameComboBox(siteId);

        initComponents();
    }

    private void createComboBoxModels() {
        frameComboBoxModel = new DefaultComboBoxModel<>();
        cableComboBoxModel = new DefaultComboBoxModel<>();
        pairComboBoxModel = new DefaultComboBoxModel<>();
    }

    private void createComboBoxRenderers() {
        cableComboBoxRenderer = new CableComboBoxRenderer();
        pairComboBoxRenderer = new PairComboBoxRenderer();
    }

    private void fillStreetFrameComboBox(int siteId) {
        StreetFrame selectFrame = new StreetFrame();
        selectFrame.setName(bundle.getString("WiringInternalFrame.Select.short").charAt(0));
        List<StreetFrame> streetFramesList = new ArrayList<>();
        streetFramesList.add(selectFrame);
        for (StreetFrame streetFrame : cablesAnalyzer.getStreetFramesList(siteId))
            streetFramesList.add(streetFrame);

        fillComboBoxModel(streetFramesList, frameComboBoxModel);
    }

    /**
     *
     * @param <T>
     * @param list
     * @param model
     */
    private <T> void fillComboBoxModel(List<T> list, DefaultComboBoxModel<T> model) {
        for (T element : list) {
            model.addElement(element);
        }
    }

    public StreetPair getStreetPair() {
        StreetPair selectedStreetPair = null;
        if (frameComboBox.getSelectedIndex() != 0)
            selectedStreetPair = (StreetPair) pairComboBox.getSelectedItem();
        return selectedStreetPair;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frameLabel = new javax.swing.JLabel();
        cableLabel = new javax.swing.JLabel();
        pairLabel = new javax.swing.JLabel();
        frameComboBox = new javax.swing.JComboBox<>();
        cableComboBox = new javax.swing.JComboBox<>();
        pairComboBox = new javax.swing.JComboBox<>();

        frameLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("i18n/WiringInternalFrameBundle"); // NOI18N
        frameLabel.setText(bundle.getString("PairSelectionPanel.frameLabel.text")); // NOI18N

        cableLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cableLabel.setText(bundle.getString("PairSelectionPanel.cableLabel.text")); // NOI18N

        pairLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        pairLabel.setText(bundle.getString("PairSelectionPanel.pairLabel.text")); // NOI18N

        frameComboBox.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        frameComboBox.setModel(frameComboBoxModel);
        frameComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frameComboBoxActionPerformed(evt);
            }
        });

        cableComboBox.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cableComboBox.setModel(cableComboBoxModel);
        cableComboBox.setRenderer(cableComboBoxRenderer);
        cableComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cableComboBoxActionPerformed(evt);
            }
        });

        pairComboBox.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        pairComboBox.setModel(pairComboBoxModel);
        pairComboBox.setRenderer(pairComboBoxRenderer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pairLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(pairComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(frameLabel)
                            .addComponent(cableLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cableComboBox, 0, 63, Short.MAX_VALUE)
                            .addComponent(frameComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frameLabel)
                    .addComponent(frameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cableLabel)
                    .addComponent(cableComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pairLabel)
                    .addComponent(pairComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void frameComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frameComboBoxActionPerformed
        cableComboBoxModel.removeAllElements();
        List<StreetCable> streetCablesList = new ArrayList<>();
        int selectedFrameId = ((StreetFrame) frameComboBox.getSelectedItem()).getId();
        streetCablesList = cablesAnalyzer.getStreetCablesList(selectedFrameId);
        fillComboBoxModel(streetCablesList, cableComboBoxModel);
    }//GEN-LAST:event_frameComboBoxActionPerformed

    private void cableComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cableComboBoxActionPerformed
        pairComboBoxModel.removeAllElements();
        StreetCable selectedCable = (StreetCable) cableComboBox.getSelectedItem();
        fillComboBoxModel(cablesAnalyzer.getFreeStreetPairsList(selectedCable.getId()), pairComboBoxModel);
    }//GEN-LAST:event_cableComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<StreetCable> cableComboBox;
    private javax.swing.JLabel cableLabel;
    private javax.swing.JComboBox<StreetFrame> frameComboBox;
    private javax.swing.JLabel frameLabel;
    private javax.swing.JComboBox<StreetPair> pairComboBox;
    private javax.swing.JLabel pairLabel;
    // End of variables declaration//GEN-END:variables

    private CablesAnalyzer cablesAnalyzer;
    // Models
    private DefaultComboBoxModel<StreetFrame> frameComboBoxModel;
    private DefaultComboBoxModel<StreetCable> cableComboBoxModel;
    private DefaultComboBoxModel<StreetPair> pairComboBoxModel;
    // Renderers.
    private CableComboBoxRenderer cableComboBoxRenderer;
    private PairComboBoxRenderer pairComboBoxRenderer;

    private ResourceBundle bundle = ResourceBundle.getBundle("i18n/WiringInternalFrameBundle"); // NOI18N

}
