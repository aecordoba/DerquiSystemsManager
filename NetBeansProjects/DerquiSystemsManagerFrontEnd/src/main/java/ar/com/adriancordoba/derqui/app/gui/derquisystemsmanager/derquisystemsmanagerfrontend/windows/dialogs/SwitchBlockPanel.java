/*
 * 		SwitchBlockPanel.java
 *   Copyright (C) 2016  Adrián E. Córdoba [software.asia@gmail.com]
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/**
 * 		SwitchBlockPanel.java
 *  Adrián E. Córdoba [software.asia@gmail.com] 		Sep 20, 2016
 */
package ar.com.adriancordoba.derqui.app.gui.derquisystemsmanager.derquisystemsmanagerfrontend.windows.dialogs;

import ar.com.adriancordoba.derqui.app.console.derquisystemsmanager.derquisystemsmanagerdataaccess.model.descriptors.Technology;
import java.util.ResourceBundle;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Adrián E. Córdoba [software.asia@gmail.com]
 */
public class SwitchBlockPanel extends javax.swing.JPanel {

    /**
     * Creates new form SwitchBlockPanel
     *
     * @param switchBockName
     * @param description
     * @param data
     * @param positions
     * @param technology
     */
    public SwitchBlockPanel(String switchBockName, String description, String[][] data, int positions, int availablePositions, Technology technology) {
        this.positions = positions;
        this.availablePositions = availablePositions;
        String[] columnNames = null;
        switch (technology) {
            case NEAX61SIGMA:
                columnNames = new String[6];
                columnNames[0] = "TSW";
                columnNames[1] = "KHW";
                columnNames[2] = "PHW";
                columnNames[3] = "ROW";
                columnNames[4] = bundle.getString("SwitchBlockPanel.equipmentTable.frameColumnHeader.text");
                columnNames[5] = bundle.getString("SwitchBlockPanel.equipmentTable.moduleColumnHeader.text");
                break;
            case NEAX61SIGMA_ELU:
                columnNames = new String[5];
                columnNames[0] = "ELU";
                columnNames[1] = "TSW";
                columnNames[2] = "KHW";
                columnNames[3] = "PHW";
                columnNames[4] = "DTIs";
                break;
            case NEAX61E:
                columnNames = new String[6];
                columnNames[0] = "SPCE";
                columnNames[1] = "HW";
                columnNames[2] = "SHW";
                columnNames[3] = "GR";
                columnNames[4] = bundle.getString("SwitchBlockPanel.equipmentTable.frameColumnHeader.text");
                columnNames[5] = bundle.getString("SwitchBlockPanel.equipmentTable.moduleColumnHeader.text");
                break;
            case ZHONE:
                columnNames = new String[1];
                columnNames[0] = "CABLE";
        }

        tableModel = new DefaultTableModel(data, columnNames);

        initComponents();
        if (technology == Technology.NEAX61SIGMA || technology == Technology.NEAX61E)
            setColumnsSize();
        descriptionTextArea.setText(description);
        switchBlockNameLabel.setText(switchBockName);
        occupancyProgressBar.setValue((positions - availablePositions) * 100 / positions);
        positionsLabel.setText(String.valueOf(availablePositions));
    }

    private void setColumnsSize() {
        TableColumn column = null;
        for (int i = 0; i < 6; i++) {
            column = equipmentTable.getColumnModel().getColumn(i);
            if (i == 4)
                column.setPreferredWidth(70);
            else
                column.setPreferredWidth(50);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        switchBlockNameLabel = new javax.swing.JLabel();
        equipmentScrollPane = new javax.swing.JScrollPane();
        equipmentTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        informationPanel = new javax.swing.JPanel();
        positionsLabel = new javax.swing.JLabel();
        occupancyProgressBar = new javax.swing.JProgressBar();
        availablePositionsLabel = new javax.swing.JLabel();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("i18n/EquipmentInternalFrameBundle"); // NOI18N
        switchBlockNameLabel.setText(bundle.getString("SwitchBlockPanel.switchBlockNameLabel.text")); // NOI18N

        equipmentTable.setModel(tableModel);
        equipmentScrollPane.setViewportView(equipmentTable);

        descriptionTextArea.setEditable(false);
        descriptionTextArea.setColumns(20);
        descriptionTextArea.setRows(5);
        jScrollPane1.setViewportView(descriptionTextArea);

        positionsLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        positionsLabel.setText(null);

        occupancyProgressBar.setStringPainted(true);

        availablePositionsLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        availablePositionsLabel.setText(bundle.getString("SwitchBlockPanel.availablePositionsLabel.text")); // NOI18N

        javax.swing.GroupLayout informationPanelLayout = new javax.swing.GroupLayout(informationPanel);
        informationPanel.setLayout(informationPanelLayout);
        informationPanelLayout.setHorizontalGroup(
            informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(occupancyProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                    .addGroup(informationPanelLayout.createSequentialGroup()
                        .addComponent(availablePositionsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(positionsLabel)))
                .addContainerGap())
        );
        informationPanelLayout.setVerticalGroup(
            informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(occupancyProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(availablePositionsLabel)
                    .addComponent(positionsLabel))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(equipmentScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(informationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(switchBlockNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(switchBlockNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(equipmentScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(informationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel availablePositionsLabel;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JScrollPane equipmentScrollPane;
    private javax.swing.JTable equipmentTable;
    private javax.swing.JPanel informationPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar occupancyProgressBar;
    private javax.swing.JLabel positionsLabel;
    private javax.swing.JLabel switchBlockNameLabel;
    // End of variables declaration//GEN-END:variables

    private int positions;
    private int availablePositions;

    private DefaultTableModel tableModel;
    private ResourceBundle bundle = ResourceBundle.getBundle("i18n/EquipmentInternalFrameBundle"); // NOI18N
}
