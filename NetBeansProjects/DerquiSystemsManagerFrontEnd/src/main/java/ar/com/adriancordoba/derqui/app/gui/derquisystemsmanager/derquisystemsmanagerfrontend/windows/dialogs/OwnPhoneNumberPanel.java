/*
 * 		OwnPhoneNumberPanel.java
 *   Copyright (C) 2016  Adrián E. Córdoba [software.asia@gmail.com]
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/**
 * 		OwnPhoneNumberPanel.java
 *  Adrián E. Córdoba [software.asia@gmail.com] 		Jun 18, 2017
 */
package ar.com.adriancordoba.derqui.app.gui.derquisystemsmanager.derquisystemsmanagerfrontend.windows.dialogs;

import ar.com.adriancordoba.derqui.app.console.derquisystemsmanager.derquisystemsmanagerdataaccess.model.phone.Area;
import ar.com.adriancordoba.derqui.app.console.derquisystemsmanager.derquisystemsmanagerdataaccess.model.phone.Country;
import ar.com.adriancordoba.derqui.app.console.derquisystemsmanager.derquisystemsmanagerdataaccess.model.phone.OfficeCode;
import ar.com.adriancordoba.derqui.app.gui.derquisystemsmanager.derquisystemsmanagerfrontend.utils.PhonesAnalyzer;
import ar.com.adriancordoba.derqui.app.gui.derquisystemsmanager.derquisystemsmanagerfrontend.windows.models.AreaCodeComboBoxRenderer;
import ar.com.adriancordoba.derqui.app.gui.derquisystemsmanager.derquisystemsmanagerfrontend.windows.models.CountryCodeComboBoxRenderer;
import ar.com.adriancordoba.derqui.app.gui.derquisystemsmanager.derquisystemsmanagerfrontend.windows.models.OfficeCodeComboBoxRenderer;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;
import javax.swing.DefaultComboBoxModel;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 *
 * @author Adrián E. Córdoba [software.asia@gmail.com]
 */
public class OwnPhoneNumberPanel extends javax.swing.JPanel {

    /**
     * Creates new form OwnNumberPanel
     *
     * @param ownNumerationAnalyzer
     */
    public OwnPhoneNumberPanel(PhonesAnalyzer ownNumerationAnalyzer) {
        this.ownNumerationAnalyzer = ownNumerationAnalyzer;

        initializePanel();
        initComponents();
    }

    private void initializePanel() {
        createComboBoxModels();
        createRenderers();
        fillComboBoxModels();
    }

    private void createComboBoxModels() {
        countryCodeComboBoxModel = new DefaultComboBoxModel<>();
        areaCodeComboBoxModel = new DefaultComboBoxModel<>();
        officeCodeComboBoxModel = new DefaultComboBoxModel<>();
    }

    private void createRenderers() {
        countryCodeComboBoxRenderer = new CountryCodeComboBoxRenderer();
        areaCodeComboBoxRenderer = new AreaCodeComboBoxRenderer();
        officeCodeComboBoxRenderer = new OfficeCodeComboBoxRenderer();
    }

    private void fillComboBoxModels() {
        fillComboBoxModel(ownNumerationAnalyzer.getOwnCountriesList(), countryCodeComboBoxModel);
        fillComboBoxModel(ownNumerationAnalyzer.getOwnAreasList(), areaCodeComboBoxModel);
        fillComboBoxModel(ownNumerationAnalyzer.getOwnOfficeCodesList(), officeCodeComboBoxModel);
    }

    /**
     *
     * @param <T>
     * @param list
     * @param model
     */
    private <T> void fillComboBoxModel(List<T> list, DefaultComboBoxModel<T> model) {
        for (T element : list)
            model.addElement(element);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numberTextField = new javax.swing.JTextField();
        officeCodeComboBox = new javax.swing.JComboBox<>();
        areaCodeComboBox = new javax.swing.JComboBox<>();
        countryCodeComboBox = new javax.swing.JComboBox<>();
        countryCodeLabel = new javax.swing.JLabel();
        areaCodeLabel = new javax.swing.JLabel();
        officeCodeLabel = new javax.swing.JLabel();
        numberLabel = new javax.swing.JLabel();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("i18n/MainFrameBundle"); // NOI18N
        numberTextField.setText(bundle.getString("OwnPhoneNumberPanel.numberTextField.text")); // NOI18N
        numberTextField.setEnabled(false);

        officeCodeComboBox.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        officeCodeComboBox.setModel(officeCodeComboBoxModel);
        officeCodeComboBox.setRenderer(officeCodeComboBoxRenderer);
        officeCodeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                officeCodeComboBoxActionPerformed(evt);
            }
        });

        areaCodeComboBox.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        areaCodeComboBox.setModel(areaCodeComboBoxModel);
        areaCodeComboBox.setRenderer(areaCodeComboBoxRenderer);
        areaCodeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                areaCodeComboBoxActionPerformed(evt);
            }
        });

        countryCodeComboBox.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        countryCodeComboBox.setModel(countryCodeComboBoxModel);
        countryCodeComboBox.setRenderer(countryCodeComboBoxRenderer);
        countryCodeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryCodeComboBoxActionPerformed(evt);
            }
        });

        countryCodeLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        countryCodeLabel.setText(bundle.getString("OwnPhoneNumberPanel.countryCodeLabel.text")); // NOI18N

        areaCodeLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        areaCodeLabel.setText(bundle.getString("OwnPhoneNumberPanel.areaCodeLabel.text")); // NOI18N

        officeCodeLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        officeCodeLabel.setText(bundle.getString("OwnPhoneNumberPanel.officeCodeLabel.text")); // NOI18N

        numberLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        numberLabel.setText(bundle.getString("OwnPhoneNumberPanel.numberLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(countryCodeLabel)
                    .addComponent(areaCodeLabel)
                    .addComponent(officeCodeLabel)
                    .addComponent(numberLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(countryCodeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(areaCodeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(officeCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(numberTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryCodeLabel)
                    .addComponent(countryCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(areaCodeLabel)
                    .addComponent(areaCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(officeCodeLabel)
                    .addComponent(officeCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberLabel)
                    .addComponent(numberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void countryCodeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryCodeComboBoxActionPerformed
        areaCodeComboBoxModel.removeAllElements();
        List<Area> areasList;
        if (countryCodeComboBox.getSelectedIndex() == 0) {
            areasList = ownNumerationAnalyzer.getOwnAreasList();
            numberTextField.setText("");
            numberTextField.setEnabled(false);
        } else {
            Country selectedCountry = (Country) countryCodeComboBox.getSelectedItem();
            int selectedCountryId = selectedCountry.getId();
            areasList = ownNumerationAnalyzer.getOwnAreasList(selectedCountryId);
            numberTextField.setEnabled(true);
        }
        fillComboBoxModel(areasList, areaCodeComboBoxModel);
    }//GEN-LAST:event_countryCodeComboBoxActionPerformed

    private void areaCodeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_areaCodeComboBoxActionPerformed
        officeCodeComboBoxModel.removeAllElements();
        List<OfficeCode> officeCodesList = new ArrayList<>();
        Area selectedArea = (Area) areaCodeComboBox.getSelectedItem();
        if (selectedArea != null) {
            int selectedAreaId = selectedArea.getId();
            officeCodesList = ownNumerationAnalyzer.getOwnOfficeCodesList(selectedAreaId);
        }
        fillComboBoxModel(officeCodesList, officeCodeComboBoxModel);
    }//GEN-LAST:event_areaCodeComboBoxActionPerformed

    private void officeCodeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_officeCodeComboBoxActionPerformed
        numberTextField.setText("");
        OfficeCode selectedOfficeCode = (OfficeCode) officeCodeComboBox.getSelectedItem();
        if (selectedOfficeCode != null) {
            int officeCodeId = selectedOfficeCode.getId();
            if (officeCodeId != 0)
                numberTextField.setText(ownNumerationAnalyzer.getOwnNumbersList(officeCodeId).get(0));
        }
    }//GEN-LAST:event_officeCodeComboBoxActionPerformed

    public Country getSelectedCountry() {
        return (Country) countryCodeComboBox.getSelectedItem();
    }

    public Area getSelectedArea() {
        return (Area) areaCodeComboBox.getSelectedItem();
    }

    public OfficeCode getSelectedOfficeCode() {
        return (OfficeCode) officeCodeComboBox.getSelectedItem();
    }

    public String getSelectedNumber() {
        return numberTextField.getText().trim();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Area> areaCodeComboBox;
    private javax.swing.JLabel areaCodeLabel;
    private javax.swing.JComboBox<Country> countryCodeComboBox;
    private javax.swing.JLabel countryCodeLabel;
    private javax.swing.JLabel numberLabel;
    private javax.swing.JTextField numberTextField;
    private javax.swing.JComboBox<OfficeCode> officeCodeComboBox;
    private javax.swing.JLabel officeCodeLabel;
    // End of variables declaration//GEN-END:variables

    private PhonesAnalyzer ownNumerationAnalyzer;

    // Models.
    private DefaultComboBoxModel<Area> areaCodeComboBoxModel;
    private DefaultComboBoxModel<Country> countryCodeComboBoxModel;
    private DefaultComboBoxModel<OfficeCode> officeCodeComboBoxModel;

    // Renderers.
    private CountryCodeComboBoxRenderer countryCodeComboBoxRenderer;
    private AreaCodeComboBoxRenderer areaCodeComboBoxRenderer;
    private OfficeCodeComboBoxRenderer officeCodeComboBoxRenderer;

    private ResourceBundle bundle = ResourceBundle.getBundle("i18n/MainFrameBundle"); // NOI18N
    private static final Logger logger = LogManager.getLogger(OwnPhoneNumberPanel.class);
}
