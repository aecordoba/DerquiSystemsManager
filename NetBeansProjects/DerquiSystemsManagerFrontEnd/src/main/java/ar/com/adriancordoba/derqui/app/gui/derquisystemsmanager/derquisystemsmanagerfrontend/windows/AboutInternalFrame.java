/*
 * 		AboutInternalFrame.java
 *   Copyright (C) 2016  Adrián E. Córdoba [software.asia@gmail.com]
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/**
 * 		AboutInternalFrame.java
 *  Adrián E. Córdoba [software.asia@gmail.com] 		Jul 3, 2017
 */
package ar.com.adriancordoba.derqui.app.gui.derquisystemsmanager.derquisystemsmanagerfrontend.windows;

import ar.com.adriancordoba.app.console.commonservices.configuration.Configuration;
import ar.com.adriancordoba.derqui.app.console.derquisystemsmanager.derquisystemsmanagerdataaccess.model.features.Features;
import java.util.Properties;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.commons.configuration.CompositeConfiguration;
import org.apache.commons.configuration.ConfigurationException;
import org.apache.logging.log4j.LogManager;

/**
 *
 * @author Adrián E. Córdoba [software.asia@gmail.com]
 */
public class AboutInternalFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form AboutJInternalFrame
     */
    public AboutInternalFrame() {
        initComponents();
        try {
            CompositeConfiguration configuration = Configuration.getInstance("settings.xml");
            versionTextField.setText(configuration.getString("userInterfaceVersion"));
        } catch (ConfigurationException ex) {
            logger.error("Cannot get UserInterface property.");
        }
        frontEndVersionTextField.setText(ar.com.adriancordoba.derqui.app.gui.derquisystemsmanager.derquisystemsmanagerfrontend.version.Version.getVersion());
        dataAccessVersionTextField.setText(ar.com.adriancordoba.derqui.app.console.derquisystemsmanager.derquisystemsmanagerdataaccess.version.Version.getVersion());
        
        try {
            Features features = Features.getInstance();
            dbVersionTextField.setText(features.getFeature("dbVersion"));
        } catch (Exception ex) {
            logger.error("Cannot get DB version property.");
            JOptionPane.showMessageDialog(this, bundle.getString("AboutInternalFrame.DBVersionError.information"), bundle.getString("AboutInternalFrame.DBVersionError.title"), JOptionPane.INFORMATION_MESSAGE);
        }
        
        Properties properties = System.getProperties();
        osVersionTextField.setText(properties.getProperty("os.version"));
        javaVersionTextField.setText(properties.getProperty("java.version"));
        
        open = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        versionLabel = new javax.swing.JLabel();
        versionTextField = new javax.swing.JTextField();
        frontEndVersionLabel = new javax.swing.JLabel();
        frontEndVersionTextField = new javax.swing.JTextField();
        dataAccessVersionLabel = new javax.swing.JLabel();
        dataAccessVersionTextField = new javax.swing.JTextField();
        osVersionLabel = new javax.swing.JLabel();
        osVersionTextField = new javax.swing.JTextField();
        javaVersionLabel = new javax.swing.JLabel();
        javaVersionTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        okButton = new javax.swing.JButton();
        dbVersionLabel = new javax.swing.JLabel();
        dbVersionTextField = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("i18n/AboutInternalFrameBundle"); // NOI18N
        setTitle(bundle.getString("AboutInternalFrame.title")); // NOI18N
        setName("Form"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        versionLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        versionLabel.setText(bundle.getString("AboutInternalFrame.versionLabel.text")); // NOI18N
        versionLabel.setName("versionLabel"); // NOI18N

        versionTextField.setEditable(false);
        versionTextField.setText(bundle.getString("AboutInternalFrame.versionTextField.text")); // NOI18N
        versionTextField.setName("versionTextField"); // NOI18N

        frontEndVersionLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        frontEndVersionLabel.setText(bundle.getString("AboutInternalFrame.frontEndVersionLabel.text")); // NOI18N
        frontEndVersionLabel.setName("frontEndVersionLabel"); // NOI18N

        frontEndVersionTextField.setEditable(false);
        frontEndVersionTextField.setText(bundle.getString("AboutInternalFrame.frontEndVersionTextField.text")); // NOI18N
        frontEndVersionTextField.setName("frontEndVersionTextField"); // NOI18N

        dataAccessVersionLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        dataAccessVersionLabel.setText(bundle.getString("AboutInternalFrame.dataAccessVersionLabel.text")); // NOI18N
        dataAccessVersionLabel.setName("dataAccessVersionLabel"); // NOI18N

        dataAccessVersionTextField.setEditable(false);
        dataAccessVersionTextField.setText(bundle.getString("AboutInternalFrame.dataAccessVersionTextField.text")); // NOI18N
        dataAccessVersionTextField.setName("dataAccessVersionTextField"); // NOI18N

        osVersionLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        osVersionLabel.setText(bundle.getString("AboutInternalFrame.osVersionLabel.text")); // NOI18N
        osVersionLabel.setName("osVersionLabel"); // NOI18N

        osVersionTextField.setEditable(false);
        osVersionTextField.setText(bundle.getString("AboutInternalFrame.osVersionTextField.text")); // NOI18N
        osVersionTextField.setName("osVersionTextField"); // NOI18N

        javaVersionLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        javaVersionLabel.setText(bundle.getString("AboutInternalFrame.javaVersionLabel.text")); // NOI18N
        javaVersionLabel.setName("javaVersionLabel"); // NOI18N

        javaVersionTextField.setEditable(false);
        javaVersionTextField.setText(bundle.getString("AboutInternalFrame.javaVersionTextField.text")); // NOI18N
        javaVersionTextField.setName("javaVersionTextField"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        descriptionTextArea.setEditable(false);
        descriptionTextArea.setColumns(10);
        descriptionTextArea.setLineWrap(true);
        descriptionTextArea.setRows(2);
        descriptionTextArea.setText(bundle.getString("AboutInternalFrame.description.text")); // NOI18N
        descriptionTextArea.setName("descriptionTextArea"); // NOI18N
        jScrollPane1.setViewportView(descriptionTextArea);

        okButton.setText(bundle.getString("AboutInternalFrame.okButton.text")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        dbVersionLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        dbVersionLabel.setText(bundle.getString("AboutInternalFrame.dbVersionLabel.text")); // NOI18N
        dbVersionLabel.setName("dbVersionLabel"); // NOI18N

        dbVersionTextField.setEditable(false);
        dbVersionTextField.setText(bundle.getString("AboutInternalFrame.dbVersionTextField.text")); // NOI18N
        dbVersionTextField.setName("dbVersionTextField"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(versionLabel)
                            .addComponent(frontEndVersionLabel)
                            .addComponent(dataAccessVersionLabel)
                            .addComponent(dbVersionLabel)
                            .addComponent(osVersionLabel)
                            .addComponent(javaVersionLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(javaVersionTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                            .addComponent(osVersionTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                            .addComponent(frontEndVersionTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dataAccessVersionTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dbVersionTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(versionTextField, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(versionLabel)
                    .addComponent(versionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frontEndVersionLabel)
                    .addComponent(frontEndVersionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataAccessVersionLabel)
                    .addComponent(dataAccessVersionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dbVersionLabel)
                    .addComponent(dbVersionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(osVersionLabel)
                    .addComponent(osVersionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(javaVersionLabel)
                    .addComponent(javaVersionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(okButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        open = false;
    }//GEN-LAST:event_formInternalFrameClosed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed
    
    public static boolean isOpen() {
        return open;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dataAccessVersionLabel;
    private javax.swing.JTextField dataAccessVersionTextField;
    private javax.swing.JLabel dbVersionLabel;
    private javax.swing.JTextField dbVersionTextField;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JLabel frontEndVersionLabel;
    private javax.swing.JTextField frontEndVersionTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel javaVersionLabel;
    private javax.swing.JTextField javaVersionTextField;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel osVersionLabel;
    private javax.swing.JTextField osVersionTextField;
    private javax.swing.JLabel versionLabel;
    private javax.swing.JTextField versionTextField;
    // End of variables declaration//GEN-END:variables

    private static boolean open;
    
    private ResourceBundle bundle = ResourceBundle.getBundle("i18n/AboutInternalFrameBundle"); // NOI18N
    private static final org.apache.logging.log4j.Logger logger = LogManager.getLogger(AboutInternalFrame.class);
    
}
